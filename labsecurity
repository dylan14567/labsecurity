#!/bin/python
# Copyright Â©2021 - 2022 by Dylan Meca. All rights reserved.
import os
import sys
import time
import libsecurity as lab
from colorama import init, Fore, Style

init(autoreset=True)

print("""

   __     __                        _ __
  / /__ _/ /  ___ ___ ______ ______(_) /___ __
 / / _ `/ _ \(_-</ -_) __/ // / __/ / __/ // /
/_/\_,_/_.__/___/\__/\__/\_,_/_/ /_/\__/\_, /
                                       /___/
""")

print("Homepage: https://github.com/dylanmeca/labsecurity")
print("Use the help command to get information on the main commands")
print("Use the show options command for more information about the commands")


def terminal():

    while True:

        try:
            user = input("labsecurity > ")
            prompt = user.split()

            if not prompt:
                os.system("cd")
            elif prompt[0] == 'help':
                lab.help()
            elif prompt[0] == 'show' and prompt[1] == 'options':
                lab.show_options()
            elif prompt[0] == 'set':
                # Here is the part where the selections are put
                if prompt[1] == 'target':
                    global target
                    print(Style.BRIGHT + Fore.GREEN + "target =>", prompt[2])
                    target = prompt[2]
                elif prompt[1] == 'port':
                    global port
                    print(Style.BRIGHT + Fore.GREEN + "port =>", prompt[2])
                    port = prompt[2]
                else:
                    print(Style.BRIGHT + Fore.RED + "[*] ERROR, use the help command for more information")
            elif prompt[0] == 'use':
                global use
                # Here is the part where one of the following categories is used
                if prompt[1] == 'scanweb':
                    print(Style.BRIGHT + Fore.GREEN + "use =>", prompt[1])
                    use = prompt[1]
                elif prompt[1] == 'scanports':
                    print(Style.BRIGHT + Fore.GREEN + "use =>", prompt[1])
                    use = prompt[1]
                elif prompt[1] == 'scanport':
                    print(Style.BRIGHT + Fore.GREEN + "use =>", prompt[1])
                    use = prompt[1]
                elif prompt[1] == 'scanip':
                    print(Style.BRIGHT + Fore.GREEN + "use =>", prompt[1])
                    use = prompt[1]
                elif prompt[1] == 'scanns':
                    print(Style.BRIGHT + Fore.GREEN + "use =>", prompt[1])
                    use = prompt[1]
                elif prompt[1] == 'getwpv':
                    print(Style.BRIGHT + Fore.GREEN + "use =>", prompt[1])
                    use = prompt[1]
                else:
                    print(Style.BRIGHT + Fore.RED + "[*] ERROR, use the help command for more information")
            elif prompt[0] == 'clear':
                command = lab.command_clear()
                os.system(command)
            elif prompt[0] == 'ls':
                command = lab.command_ls()
                os.system(command)
            elif prompt[0] == 'exit' or prompt[0] == 'quit':
                break
            elif prompt[0] == 'run' or prompt[0] == 'exploit':
                if use == 'scanweb':
                    print(Style.BRIGHT + Fore.BLUE + "[*] Scanning website...")
                    lab.scanweb(target)
                elif use == 'scanports':
                    print(Style.BRIGHT + Fore.BLUE + "[*] Scanning ports...")
                    lab.scanports(target)
                elif use == 'scanport':
                    print(Style.BRIGHT + Fore.BLUE + "[*] Scanning port...")
                    lab.scanport(target, port)
                elif use == 'scanip':
                    print(Style.BRIGHT + Fore.BLUE + "[*] Scanning ip...")
                    lab.scanip(target)
                elif use == 'scanns':
                    print(Style.BRIGHT + Fore.BLUE + "[*] Scanning NS from DNS...")
                    lab.scanns(target)
                elif use == 'getwpv':
                    print(Style.BRIGHT + Fore.BLUE + "[*] Getting wp version...")
                    lab.getwpv(target)
                else:
                    print(Style.BRIGHT + Fore.RED + "[*] ERROR, use the help command for more information")
            else:
                print(Style.BRIGHT + Fore.RED + "[*] ERROR, use the help command for more information")

        except ValueError:
            print(Style.BRIGHT + Fore.RED + "[*] Error, there is a type of error.")
            sys.exit()
        except KeyboardInterrupt:
            print(Style.BRIGHT + Fore.BLUE + "[*] Exiting...")
            sys.exit()
        except NameError:
            print(Style.BRIGHT + Fore.RED + "[*] Error, the command I use is not defined in the program code.")
            sys.exit()
        except SyntaxError:
            print(Style.BRIGHT + Fore.RED + "[*] Error, the code has a syntax error.")
            sys.exit()
        except TypeError:
            print(Style.BRIGHT + Fore.RED + "[*] Error, the code is misspelled.")
            sys.exit()
        except IndexError:
            print(Style.BRIGHT + Fore.RED + "[*] Error, the command you used is incomplete.")

if __name__ == '__main__':
    terminal()
